version: 2.1

jobs:
  build:
    docker:
      - image: cimg/node:lts
    steps:
      - checkout
      - restore_cache:
          key: v1-npm-deps-{{ checksum "package-lock.json" }}
      - run:
          name: Install Node.js Dependencies
          command: |
            npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-npm-deps-{{ checksum "package-lock.json" }}
      - run:
          name: Generate production build
          command: |
            npm run build
      - run:
          name: Make sure build folder exists
          command: |
            ls -lah build/
      - persist_to_workspace:
          root: ~/
          paths:
            - project/build

  test:
    docker:
      - image: cimg/node:lts
    steps:
      - checkout
      - restore_cache:
          key: v1-npm-deps-{{ checksum "package-lock.json" }}
      - run:
          name: Install Node.js Dependencies
          command: |
            npm install
      - run:
          name: Run unit test suites
          command: |
            npm run test

  scan:
    docker:
      - image: cimg/node:lts
    steps:
      - checkout
      - restore_cache:
          key: v1-npm-deps-{{ checksum "package-lock.json" }}
      - run:
          name: Install Node.js Dependencies
          command: |
            npm install
      - run:
          name: Scan source code for critical vulnerabilities
          command: |
            npm run scan

  deploy:
    docker:
      - image: cimg/aws:2022.11
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Make sure build folder exists
          command: |
            ls -lah ~/project/build/
      - run:
          name: Sync the build folder to the S3 bucket
          command: |
            aws s3 sync ~/project/build s3://${S3_BUCKET_NAME} --delete

  verify:
    docker:
      - image: cimg/base:stable
    steps:
      - run:
          name: Verify website works
          command: |
            if curl -s $S3_WEBSITE_ENDPOINT | grep "App"
            then
              echo "Website Works"
              exit 0
            else
              echo "Website does not work"
              exit 1
            fi

workflows:
  default:
    jobs:
      - build
      - test:
          requires:
            - build
      - scan:
          requires:
            - build
      - deploy:
          requires:
            - scan
            - test
      - verify:
          requires:
            - deploy
